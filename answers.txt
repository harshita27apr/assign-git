1. What is a gitignore file and what should it include for a Java project?
.gitignore file is used to define the files which needs to be ignored as these files are not needed to be included in the project such as cache files, module files. For eg, when we are using node.js for a project, it creates a folder named node modules which contains all the downloaded packages which we are using in the project. The size of the folder increases as the project becomes huge. So, these files need not to be pushed to the git as the packages are downloaded by individual person using requirement.txt, so pushing them to the git is a costly and useless step, so we use gitignore to ignore these files while pushing the code.

This file should include the below extensions for a Java project:
    # Compiled class file
    *.class

    # Log file
    *.log

    # BlueJ files
    *.ctxt

    # Mobile Tools for Java (J2ME)
    .mtj.tmp/

    # Package Files #
    *.jar
    *.war
    *.nar
    *.ear
    *.zip
    *.tar.gz
    *.rar

    # virtual machine crash logs #
    hs_err_pid*

2. What does fast-forward in Git mean?

Fast forward merge can be performed when there is a direct linear path from the source branch to the target branch. In fast-forward merge, git simply moves the source branch pointer to the target branch pointer without creating an extra merge commit.

3. Why should you have different branches?
So many developers work at the same time on the same code base. If all the person will commit and push changes onto the main branch then the bugs from one person's code will get into the main code base and it will break the main code base also. That is why it is suggested to make different branches so that one can test and remove the bugs and then merge its code to the main code so that the system doesnt break.

4. In a project how many remote Git repositories do you usually have?
A project can have single or multiple git repositories depending upon the project.
